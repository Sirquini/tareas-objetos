Autor: Santiago Quintero
Tetriz

## Compilando el programa:

Para compilar este programa se requiere QT version 5.
Generar el Makefile ejecutando:
	qmake
Compilar haciendo uso del comando:
	make
El Programa adjunto hace uso del compilador clang++ con
el estandar c++11 (utilizando el parametro -std=c++11).

## Probando el programa

En el main se invoca una instancia del objeto GameController cuyo constructor corresponde a:

GameController (int rows, int cols, int size=20)

int rows = Al numero de Filas que tiene el Tablero de Tetriz.
int cols = Al numero de Columnas que tiene el Tablero de Tetriz.

// opcional
int size = Al numero, en pixeles, que mide lado de cada cuadrado de Tetriz, 
		   por defecto 20 pixeles.

## Para utilizar el Tetriz sin interfaz grafica:

Hay dos clases principales a tener en cuenta Tablero y Cola.

Para inicializar un nuevo Tablero de juego se crea una nueva instancia de 
tablero y como parametros se pasa el numero de filas y columnas del tablero, 
junto con una Cola para generar figuras aleatorias.

Ejemplo:
Cola cola;
Tablero tablero(14, 10, cola);

Para ingresar figuras al tablero de Tetriz, es necesario crear una instancia de una Figura, ya sea utilizando una figura nueva o utilizando una generada 
aleatoriamente por la Cola

La figura se registra por primera vez en el Tablero con su metodo 

void Tablero::registrarFigura(Figura figura);

Una vez se ha registrado una figura esta se puede desplazar pasando la Figura
como parametro de los metodo del Tablero:

bool Tablero::moveDer(Figura); // Mover a la derecha.
bool Tablero::moveIzq(Figura); // Mover a la izquierda.
bool Tablero::moveDown(Figura); // Mover hacia abajo.

Y se puede rotar con:

bool Tablero::rotarDer(Figura); // Rotar sentido horario.
bool Tablero::rotarIzq(Figura); // Mover sentido anti-horario.

Estos metodos checkean coliciones con otros Bloques y limites del Tablero, por
lo que si un movimiento no es posible no se vera su efecto en el tablero.

Para imprimir en pantalla el esta actual para el tablero se llama al metodo:

void Tablero::print() const;

Para revisar y eliminar una fila llena de bloques se llama a:

void Tablero::evaluar();

Para saber si una Figura sin alterar puede registrarse en el Tablero:

bool canRegister() const;

Y para eliminar una Figura del tablero, es decir, quitar sus bloques del
tablero, se usa:

void Tablero::unregisterFigura(Figura);

## Notas

	Cola cola;
	Tablero tablero(14,10,cola);
	Figura figura* = tablero.getFigura();

	tablero.registerFigura(*figura);
	
// Este procedimiento:

	tablero.unregisterFigura(*figura);
	figura.moveDown();
	tablero.registerFigura(*figura);

// Es equivalente a:
	tablero.moveDown(*figura);

// Pero, la segunda, evita desbordamientos y checkea colisiones con otros 
// Bloques por lo que es mejor evitar la primera.

